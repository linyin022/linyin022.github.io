<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
  
  <entry>
    <title>Hexo搭建及部署</title>
    <link href="/2022/04/25/Hexo%E6%90%AD%E5%BB%BA%E5%8F%8A%E9%83%A8%E7%BD%B2/"/>
    <url>/2022/04/25/Hexo%E6%90%AD%E5%BB%BA%E5%8F%8A%E9%83%A8%E7%BD%B2/</url>
    
    <content type="html"><![CDATA[<h1 id="Hexo-搭建及部署-更新中"><a href="#Hexo-搭建及部署-更新中" class="headerlink" title="Hexo 搭建及部署(更新中)"></a>Hexo 搭建及部署(更新中)</h1><h3 id="一、简介"><a href="#一、简介" class="headerlink" title="一、简介"></a>一、简介</h3><h4 id="1、-Hexo特点"><a href="#1、-Hexo特点" class="headerlink" title="1、 Hexo特点"></a>1、 Hexo特点</h4><p>Hexo 是一个简单、快速、强大的静态博客框架,出自台湾大学生 tommy351 之手。我也看过使用 Jekyll、Octopress 搭建个人博客的过程，确实要繁琐许多。相比之下 Hexo 更轻便更快捷，下面是其官网强调的四大特点：</p><ul><li>极速生成静态页面</li><li>一键部署博客</li><li>丰富的插件支持</li><li>支持 Markdown</li></ul><h3 id="二-下载安装环境"><a href="#二-下载安装环境" class="headerlink" title="二.下载安装环境"></a>二.下载安装环境</h3><h4 id="1、下载安装Node-js-amp-amp-npm"><a href="#1、下载安装Node-js-amp-amp-npm" class="headerlink" title="1、下载安装Node.js &amp;&amp; npm"></a>1、下载安装Node.js &amp;&amp; npm</h4><ol><li><p><a href="https://nodejs.org/">Node.js 官网</a> || <a href="http://nodejs.cn/">Node.js 中文网 (nodejs.cn)</a></p><ul><li><p>安装完Node.js后可以用命令行查询是否有安装成功</p></li><li><p>使用 node -v 可以查询到当前安装的node版本</p></li><li><p>npm会在nodejs下载安装完之后自动安装，可在命令行自行查询</p></li></ul><figure class="highlight shell"><table><tr><td class="gutter"><div class="code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></div></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta prompt_"></span><br><span class="hljs-meta prompt_"># </span><span class="language-bash">检查安装是否成功</span><br><span class="hljs-meta prompt_">$ </span><span class="language-bash">git -v</span><br><span class="hljs-meta prompt_">$ </span><span class="language-bash">node -v</span><br><span class="hljs-meta prompt_">$ </span><span class="language-bash">npm -v</span><br><span class="hljs-meta prompt_"></span><br><span class="hljs-meta prompt_"># </span><span class="language-bash">更换下载源（提高下载速度）</span><br><span class="hljs-meta prompt_">$ </span><span class="language-bash">npm config <span class="hljs-built_in">set</span> registry https://registry.npm.taobao.org</span><br></code></pre></td></tr></table></figure></li></ol><h3 id="二、下载使用Hexo"><a href="#二、下载使用Hexo" class="headerlink" title="二、下载使用Hexo"></a>二、下载使用Hexo</h3><h4 id="1、安装Hexo"><a href="#1、安装Hexo" class="headerlink" title="1、安装Hexo"></a>1、安装Hexo</h4><figure class="highlight clean"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><code class="hljs clean"><br># <span class="hljs-number">1</span>、安装 hexo<br>$ npm install -g hexo-cli<br><br># <span class="hljs-number">2</span>、新建工作目录，存放hexo的配置文件、主题、博客（自己写的）等<br>$ mkdir blog/<br>$ cd blog/<br><br># <span class="hljs-number">3</span>、初始化hexo环境(必须进入一个空目录进行初始化！)<br>$ hexo init<br><br>##########  至此，hexo安装完成！ #########<br><br></code></pre></td></tr></table></figure><h4 id="2、使用Hexo"><a href="#2、使用Hexo" class="headerlink" title="2、使用Hexo"></a>2、使用Hexo</h4><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta prompt_"></span><br><span class="hljs-meta prompt_"># </span><span class="language-bash">1、新建博客文件，生成的文件存放在 blog/source/_post/文件名.md</span><br><span class="hljs-meta prompt_">$ </span><span class="language-bash">hexo nwe <span class="hljs-string">&#x27;文件名&#x27;</span></span><br><span class="hljs-meta prompt_"></span><br><span class="hljs-meta prompt_"># </span><span class="language-bash">2、自定义“文件名.md”内容</span><br>使用本地markdown工具进行编辑<br><span class="hljs-meta prompt_"></span><br><span class="hljs-meta prompt_"># </span><span class="language-bash">3、文件渲染</span><br><span class="hljs-meta prompt_">$ </span><span class="language-bash">hexo g</span><br><span class="hljs-meta prompt_"></span><br><span class="hljs-meta prompt_"># </span><span class="language-bash">4、本地环境测试（hexo提供的测试服务器，将本地编写的博客文件渲染并展示）</span><br><span class="hljs-meta prompt_">$ </span><span class="language-bash">hexo s  <span class="hljs-comment">#（浏览器输入：localhost:4000即可查看）</span></span><br><br></code></pre></td></tr></table></figure><h4 id="3、创建个人GitHub-io仓库"><a href="#3、创建个人GitHub-io仓库" class="headerlink" title="3、创建个人GitHub.io仓库"></a>3、创建个人GitHub.io仓库</h4><p>   登录到GitHub,如果没有GitHub帐号，使用你的邮箱注册GitHub帐号，点击GitHub中的New repository创建新仓库，仓库名应该为：<strong>用户名</strong>.<a href="https://link.zhihu.com/?target=http://github.io">http://github.io</a> 这个<strong>用户名</strong>使用你的GitHub帐号名称代替，这是固定写法，比如我的仓库名为：</p><p><img src="https://cdn.jsdelivr.net/gh/linyin022/image@main/Hexo_img/githubio.png"></p><h4 id="4、安装Git"><a href="#4、安装Git" class="headerlink" title="4、安装Git"></a>4、安装Git</h4><p>什么是Git ?简单来说Git是开源的分布式版本控制系统，用于敏捷高效地处理项目。我们网站在本地搭建好了，需要使用Git同步到GitHub上。如果想要了解Git的细节，参看<a href="https://link.zhihu.com/?target=http://weibo.com/liaoxuefeng">廖雪峰</a>老师的Git教程：<a href="https://link.zhihu.com/?target=http://www.liaoxuefeng.com/wiki/0013739516305929606dd18361248578c67b8067c8c017b000">Git教程</a> 从Git官网下载：<a href="https://link.zhihu.com/?target=https://git-scm.com/download/win">Git - Downloading Package</a> 现在的机子基本都是64位的，选择64位的安装包，下载后安装，在命令行里输入git测试是否安装成功，若安装失败，参看其他详细的Git安装教程。安装成功后，将你的Git与GitHub帐号绑定，鼠标右击打开Git Bash</p><p><img src="https://cdn.jsdelivr.net/gh/linyin022/image@main/Hexo_img/git_bash.jpg"></p><p>或者在菜单里搜索Git Bash，设置user.name和user.email配置信息：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash">git config --global user.name <span class="hljs-string">&quot;你的GitHub用户名&quot;</span><br>git config --global user.email <span class="hljs-string">&quot;你的GitHub注册邮箱&quot;</span><br></code></pre></td></tr></table></figure><p>生成ssh密钥文件：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">ssh-keygen -t rsa -C <span class="hljs-string">&quot;你的GitHub注册邮箱&quot;</span><br></code></pre></td></tr></table></figure><p>然后直接三个回车即可，默认不需要设置密码<br>然后找到生成的.ssh的文件夹中的id_rsa.pub密钥，将内容全部复制</p><p><img src="https://cdn.jsdelivr.net/gh/linyin022/image@main/Hexo_img/id_rsa.jpg"></p><p>打开<a href="https://link.zhihu.com/?target=https://github.com/settings/keys">GitHub_Settings_keys</a> 页面，新建new SSH Key</p><p><img src="https://cdn.jsdelivr.net/gh/linyin022/image@main/Hexo_img/githubkey.jpg"></p><p>Title为标题，任意填即可，将刚刚复制的id_rsa.pub内容粘贴进去，最后点击Add SSH key。<br>在Git Bash中检测GitHub公钥设置是否成功，输入 ssh <a href="mailto:&#x67;&#105;&#x74;&#64;&#103;&#x69;&#116;&#104;&#117;&#98;&#x2e;&#99;&#x6f;&#109;">&#x67;&#105;&#x74;&#64;&#103;&#x69;&#116;&#104;&#117;&#98;&#x2e;&#99;&#x6f;&#109;</a> </p><p><img src="https://cdn.jsdelivr.net/gh/linyin022/image@main/Hexo_img/ssh_key.jpg"></p><p>如上则说明成功。这里之所以设置GitHub密钥原因是，通过非对称加密的公钥与私钥来完成加密，公钥放置在GitHub上，私钥放置在自己的电脑里。GitHub要求每次推送代码都是合法用户，所以每次推送都需要输入账号密码验证推送用户是否是合法用户，为了省去每次输入密码的步骤，采用了ssh，当你推送的时候，git就会匹配你的私钥跟GitHub上面的公钥是否是配对的，若是匹配就认为你是合法用户，则允许推送。这样可以保证每次的推送都是正确合法的。</p><h4 id="5、Hexo部署"><a href="#5、Hexo部署" class="headerlink" title="5、Hexo部署"></a>5、Hexo部署</h4><figure class="highlight elixir"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><code class="hljs elixir"><br><span class="hljs-comment"># 1、安装 hexo-githubPage 插件</span><br>npm install --save hexo-deployer-git<br><br><span class="hljs-comment"># 2、新建仓库，名称必须为：&#123;github用户名&#125;.github.io</span><br><br><span class="hljs-comment"># 3、复制该仓库的路径</span><br><br><span class="hljs-comment"># 4、编辑 blog/_config.yml文件</span><br><br><span class="hljs-symbol">url:</span> url路径<br><span class="hljs-symbol">permalink:</span> <span class="hljs-symbol">:year/</span><span class="hljs-symbol">:month/</span><span class="hljs-symbol">:day/</span><span class="hljs-symbol">:title/</span><br><span class="hljs-symbol">permalink_defaults:</span><br><span class="hljs-symbol">pretty_urls:</span><br>  <span class="hljs-symbol">trailing_index:</span> <span class="hljs-literal">true</span><br>  <span class="hljs-symbol">trailing_html:</span> <span class="hljs-literal">true</span> <br><br><span class="hljs-symbol">deploy:</span><br>  <span class="hljs-symbol">type:</span> <span class="hljs-string">&#x27;git&#x27;</span><br>  <span class="hljs-symbol">repo:</span> <span class="hljs-string">&#x27;仓库地址&#x27;</span><br>  <span class="hljs-symbol">branch:</span> <span class="hljs-string">&#x27;分支名&#x27;</span><br><br><span class="hljs-comment"># 5、部署到github page</span><br><span class="hljs-variable">$ </span>hexo d<br><br></code></pre></td></tr></table></figure><h4 id="6、Hexo个性化"><a href="#6、Hexo个性化" class="headerlink" title="6、Hexo个性化"></a>6、Hexo个性化</h4><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta prompt_"></span><br><span class="hljs-meta prompt_"># </span><span class="language-bash">1、从github克隆第三方主题，保存到：blog/theme/主题名</span><br><span class="hljs-meta prompt_">$ </span><span class="language-bash">git <span class="hljs-built_in">clone</span> https://github.com/litten/hexo-theme-yilia.git themes/yilia</span><br><span class="hljs-meta prompt_"></span><br><span class="hljs-meta prompt_"># </span><span class="language-bash">2、配置 blog/_config.yml文件</span><br>theme: 主题名字<br><span class="hljs-meta prompt_"></span><br><span class="hljs-meta prompt_"># </span><span class="language-bash">3、保存提出</span><br><span class="hljs-meta prompt_">$ </span><span class="language-bash">hexo clean  <span class="hljs-comment"># 清空缓存</span></span> <br><span class="hljs-meta prompt_">$ </span><span class="language-bash">hexo g <span class="hljs-comment"># 重新渲染</span></span> <br><span class="hljs-meta prompt_">$ </span><span class="language-bash">hexo s <span class="hljs-comment"># 测试用</span></span><br><span class="hljs-meta prompt_">$ </span><span class="language-bash">hexo d <span class="hljs-comment"># 部署到github page</span></span><br><br><br></code></pre></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>Hexo</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Git</tag>
      
      <tag>GitHub</tag>
      
      <tag>Hexo</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>利用GitHub+jsDelivr[第三方CDN加速]创建属于自己的床图</title>
    <link href="/2022/04/22/%E5%88%A9%E7%94%A8GItHub-jsDelivr-%E7%AC%AC%E4%B8%89%E6%96%B9CDN%E5%8A%A0%E9%80%9F-%E5%88%9B%E5%BB%BA%E5%B1%9E%E4%BA%8E%E8%87%AA%E5%B7%B1%E7%9A%84%E5%BA%8A%E5%9B%BE/"/>
    <url>/2022/04/22/%E5%88%A9%E7%94%A8GItHub-jsDelivr-%E7%AC%AC%E4%B8%89%E6%96%B9CDN%E5%8A%A0%E9%80%9F-%E5%88%9B%E5%BB%BA%E5%B1%9E%E4%BA%8E%E8%87%AA%E5%B7%B1%E7%9A%84%E5%BA%8A%E5%9B%BE/</url>
    
    <content type="html"><![CDATA[<blockquote><p>本文章转载自[烟雨星空]的文章并且二次简化修改<br>原文章：<a href="https://www.cnblogs.com/starry-skys/p/13905766.html">https://www.cnblogs.com/starry-skys/p/13905766.html</a></p></blockquote><p><strong>1. 创建一个GitHub仓库[任意名字]</strong><br><strong>2. 在仓库中上传你的图片</strong><br><strong>3. 使用jsDelivr加速访问GitHub的床图</strong></p><p><img src="https://xiaoke022.ml/usr/uploads/2022/04/3086131500.png" alt="l1rymp2g.png"><br>创建好床图之后如果想要原生查看床图就进入任意图片，后查看url，<br>例如<br><img src="https://xiaoke022.ml/usr/uploads/2022/04/1783989775.png" alt="l1ryop33.png"><br>这是我当前的床图中的一个logo，他的url地址为：</p><blockquote><p><a href="https://github.com/linyin022/image/blob/main/logo.png">https://github.com/linyin022/image/blob/main/logo.png</a></p></blockquote><p>如果想要使用原生床图就将url路径中的blob修改成raw。或者是在原本的url路径末尾加上?raw&#x3D;true。以下是两种原生查看床图的方法实例</p><p><a href="https://github.com/linyin022/image/raw/main/logo.png">https://github.com/linyin022/image/raw/main/logo.png</a><br><a href="https://github.com/linyin022/image/blob/main/logo.png?raw=true">https://github.com/linyin022/image/blob/main/logo.png?raw=true</a></p><p>如果使用GitHub的原生床图访问速度非常慢。我们就得利用cdn来加速实现快速访问。</p><p><strong>使用jsDelivr实现CDN加速</strong></p><p>jsDelivr是一个开源免费的CDN床图加速项目</p><p>使用的方法为以下：<br>jsDelivr的路径为</p><blockquote><p><a href="https://cdn.jsdelivr.net/gh/">https://cdn.jsdelivr.net/gh/</a>&lt;你的github用户名&gt;&#x2F;&lt;你的图床仓库名&gt;@&lt;仓库版本号&gt;&#x2F;图片的路径</p></blockquote><p>这是我GitHub的logo床图的url路径<br><img src="https://xiaoke022.ml/usr/uploads/2022/04/4124722373.png" alt="l1rzm3zc.png"></p><p>将这些url路径修改进jsDelivr中，路径就是为：</p><blockquote><p><a href="https://cdn.jsdelivr.net/gh/linyin022/image@main/logo.png">https://cdn.jsdelivr.net/gh/linyin022/image@main/logo.png</a></p></blockquote><p>👆可以点击查看并且cdn加速之后的链接是否有比GitHub原生查看图片有更快的访问速度</p><p>总结：</p><ul><li>使用CDN加速可以实现某些图片、文件、资源等等使用国内网络时访问速度过慢或者无法打开时，使用CDN加速可以帮助我们有效更快的访问。</li></ul><blockquote><p>以下介绍什么是CDN及CDN加速原理[全部转载自网络搜索]</p></blockquote><p>CDN的全称是(Content Delivery Network)，即内容分发网络。其目的是通过在现有的Internet中增加一层新的CACHE(缓存)层，将网站的内容发布到最接近用户的网络”边缘“的节点，使用户可以就近取得所需的内容，提高用户访问网站的响应速度。从技术上全面解决由于网络带宽小、用户访问量大、网点分布不均等原因，提高用户访问网站的响应速度。<br>简单的说，CDN的工作原理就是将您源站的资源缓存到位于全球各地的CDN节点上，用户请求资源时，就近返回节点上缓存的资源，而不需要每个用户的请求都回您的源站获取，避免网络拥塞、缓解源站压力，保证用户访问资源的速度和体验</p><p><img src="https://xiaoke022.ml/usr/uploads/2022/04/2718497112.png" alt="l1s03z54.png"><br><img src="https://xiaoke022.ml/usr/uploads/2022/04/210631655.png" alt="l1s04e9j.png"><br><img src="https://xiaoke022.ml/usr/uploads/2022/04/884058262.png" alt="l1s04ze9.png"><br><img src="https://xiaoke022.ml/usr/uploads/2022/04/3127988837.png" alt="l1s057di.png"></p>]]></content>
    
    
    <categories>
      
      <category>Github</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Git</tag>
      
      <tag>GitHub</tag>
      
      <tag>jsDelivr</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>ThinkPHP6-Notes</title>
    <link href="/2022/04/19/ThinkPHP6-Notes/"/>
    <url>/2022/04/19/ThinkPHP6-Notes/</url>
    
    <content type="html"><![CDATA[<h1 id="ThinkPHP6-Notes"><a href="#ThinkPHP6-Notes" class="headerlink" title="ThinkPHP6-Notes"></a>ThinkPHP6-Notes</h1><h2 id="View-视图"><a href="#View-视图" class="headerlink" title="View-视图"></a>View-视图</h2><table><thead><tr><th align="left">运算符</th><th align="left">示例</th></tr></thead><tbody><tr><td align="left">+</td><td align="left">{$a+$b}</td></tr><tr><td align="left">-</td><td align="left">{$a-$b}</td></tr><tr><td align="left">*</td><td align="left">{$a*$b}</td></tr><tr><td align="left">&#x2F;</td><td align="left">{$a&#x2F;$b}</td></tr><tr><td align="left">%</td><td align="left">{$a%$b}</td></tr><tr><td align="left">++</td><td align="left">{$a++} 或 {++$a}</td></tr><tr><td align="left">–</td><td align="left">{$a–} 或{–$a}</td></tr><tr><td align="left">综合运算</td><td align="left">{$a+$b*10+$c}</td></tr><tr><td align="left">三元运算符</td><td align="left">{$a&#x3D;&#x3D;$b ? ‘yes’ : ‘no’}</td></tr></tbody></table><p><strong>Controller文件</strong></p><figure class="highlight php"><table><tr><td class="gutter"><div class="code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></div></td><td class="code"><pre><code class="hljs php"><span class="hljs-keyword">namespace</span> <span class="hljs-title class_">app</span>\<span class="hljs-title class_">controller</span>;<br><span class="hljs-keyword">use</span> <span class="hljs-title">app</span>\<span class="hljs-title">BaseController</span>;<br><span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">Index</span> <span class="hljs-keyword">extends</span> <span class="hljs-title">BaseController</span></span><br><span class="hljs-class"></span>&#123;<br>    <span class="hljs-keyword">public</span> <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">index</span>(<span class="hljs-params"></span>)</span>&#123;<br>        <span class="hljs-keyword">return</span> <span class="hljs-string">&#x27;hello ThinkPHP6!&#x27;</span>;<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure><p><em>这一段代码是直接输出返回 hello ThinkPHP6!</em></p><p>如若需要输出html页面请更换代码&#x3D;&gt;</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-keyword">namespace</span> <span class="hljs-title class_">app</span>\<span class="hljs-title class_">controller</span>;<br><span class="hljs-keyword">use</span> <span class="hljs-title">app</span>\<span class="hljs-title">BaseController</span>;<br><span class="hljs-keyword">use</span> <span class="hljs-title">think</span>\<span class="hljs-title">fecade</span>\<span class="hljs-title">View</span>;<br><span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">Index</span> <span class="hljs-keyword">extends</span> <span class="hljs-title">BaseController</span></span><br><span class="hljs-class"></span>&#123;<br>    <span class="hljs-keyword">public</span> <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">index</span>(<span class="hljs-params"></span>)</span>&#123;<br>        <span class="hljs-title class_">View</span>::<span class="hljs-title function_ invoke__">fetch</span>(<span class="hljs-string">&#x27;Index&#x27;</span>)<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure><ul><li>这里的View是门面的模块-&gt;fecade</li></ul><p><strong>View文件</strong></p><ul><li><p>View&#x2F;[class_name]&#x2F;[fetch[‘name’]]</p></li><li><p>View&#x2F;index&#x2F;index.html</p></li></ul>]]></content>
    
    
    <categories>
      
      <category>ThinkPHP</category>
      
    </categories>
    
    
    <tags>
      
      <tag>ThinkPHP</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Hello World</title>
    <link href="/2022/04/15/hello-world/"/>
    <url>/2022/04/15/hello-world/</url>
    
    <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><div class="code-wrapper"><pre><span class="line">1</span><br></pre></div></td><td class="code"><pre><code class="hljs bash">$ hexo new <span class="hljs-string">&quot;My New Post&quot;</span><br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo server<br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo generate<br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo deploy<br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>]]></content>
    
    
    
  </entry>
  
  
  
  
</search>
